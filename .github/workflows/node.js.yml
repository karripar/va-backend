name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  auth-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x, 24.x]
    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      NODE_ENV: test
      PORT: 3001
      DB_URL: mongodb://localhost:27017/vaihtoaktivaattori
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: auth-server/package-lock.json
      - run: npm ci
        working-directory: auth-server
      - run: npm run build --if-present
        working-directory: auth-server
      - run: npm test --if-present
        working-directory: auth-server

  content-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x, 24.x]
    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      NODE_ENV: test
      PORT: 3002
      DB_URL: mongodb://localhost:27017/vaihtoaktivaattori
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: content-server/package-lock.json
      - run: npm ci
        working-directory: content-server
      - run: npm run build --if-present
        working-directory: content-server
      - run: npm test --if-present
        working-directory: content-server

  upload-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x, 24.x]
    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      NODE_ENV: test
      PORT: 3003
      DB_URL: mongodb://localhost:27017/vaihtoaktivaattori
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: upload-server/package-lock.json
      - run: npm ci
        working-directory: upload-server
      - run: npm run build --if-present
        working-directory: upload-server
      - run: npm test --if-present
        working-directory: upload-server

        # comment for testing purposes